branch == branch_order
which(branch == branch_order)
# Create a column that would categorize a language's group
new_lang_heir_arr <- language_heirarchy_array %>%
mutate(branch = as.character("")) %>%
select(id_lang:silcode, branch, group1:group14) %>%
mutate(branch = ifelse(group2 %in% gp_formosan, "Formosan", branch)) %>%
mutate(branch = ifelse(group3 == "Philippines" & group3 %in% gp_philippine_toadd, "Philippine", branch)) %>%
mutate(branch = ifelse(group3 %in% gp_western_malayo_polynesian, "Western Malayo-Polynesian", branch)) %>%
mutate(branch = ifelse(group3 %in% gp3, group3, branch)) %>%
mutate(branch = ifelse(group4 %in% gp4, group4, branch)) %>%
mutate(branch = ifelse(group5 %in% gp5, group5, branch)) %>%
mutate(branch = ifelse(group6 %in% gp6, group6, branch)) %>%
mutate(branch = ifelse(group7 %in% gp7, group7, branch)) %>%
mutate(branch = ifelse(group8 %in% gp8, group8, branch)) %>%
mutate(branch = ifelse(group9 %in% gp9, group9, branch)) %>%
mutate(branch = ifelse(group10 %in% gp10, group10, branch)) %>%
# Relevel branch into factor
mutate(branch = fct_relevel(branch, branch_order)) %>%
mutate(branch_lvl = ifelse( branch != "", which(branch == branch_order), ""))
new_lang_heir_arr
# Create a column that would categorize a language's group
new_lang_heir_arr <- language_heirarchy_array %>%
mutate(branch = as.character("")) %>%
select(id_lang:silcode, branch, group1:group14) %>%
mutate(branch = ifelse(group2 %in% gp_formosan, "Formosan", branch)) %>%
mutate(branch = ifelse(group3 == "Philippines" & group3 %in% gp_philippine_toadd, "Philippine", branch)) %>%
mutate(branch = ifelse(group3 %in% gp_western_malayo_polynesian, "Western Malayo-Polynesian", branch)) %>%
mutate(branch = ifelse(group3 %in% gp3, group3, branch)) %>%
mutate(branch = ifelse(group4 %in% gp4, group4, branch)) %>%
mutate(branch = ifelse(group5 %in% gp5, group5, branch)) %>%
mutate(branch = ifelse(group6 %in% gp6, group6, branch)) %>%
mutate(branch = ifelse(group7 %in% gp7, group7, branch)) %>%
mutate(branch = ifelse(group8 %in% gp8, group8, branch)) %>%
mutate(branch = ifelse(group9 %in% gp9, group9, branch)) %>%
mutate(branch = ifelse(group10 %in% gp10, group10, branch)) %>%
# Relevel branch into factor
mutate(branch = fct_relevel(branch, branch_order)) %>%
mutate(branch_lvl = ifelse( branch != "", which(branch == branch_order), 0))
new_lang_heir_arr
# Create a column that would categorize a language's group
new_lang_heir_arr <- language_heirarchy_array %>%
mutate(branch = as.character("")) %>%
select(id_lang:silcode, branch, group1:group14) %>%
mutate(branch = ifelse(group2 %in% gp_formosan, "Formosan", branch)) %>%
mutate(branch = ifelse(group3 == "Philippines" & group3 %in% gp_philippine_toadd, "Philippine", branch)) %>%
mutate(branch = ifelse(group3 %in% gp_western_malayo_polynesian, "Western Malayo-Polynesian", branch)) %>%
mutate(branch = ifelse(group3 %in% gp3, group3, branch)) %>%
mutate(branch = ifelse(group4 %in% gp4, group4, branch)) %>%
mutate(branch = ifelse(group5 %in% gp5, group5, branch)) %>%
mutate(branch = ifelse(group6 %in% gp6, group6, branch)) %>%
mutate(branch = ifelse(group7 %in% gp7, group7, branch)) %>%
mutate(branch = ifelse(group8 %in% gp8, group8, branch)) %>%
mutate(branch = ifelse(group9 %in% gp9, group9, branch)) %>%
mutate(branch = ifelse(group10 %in% gp10, group10, branch)) %>%
# Relevel branch into factor
mutate(branch = fct_relevel(branch, branch_order)) %>%
mutate(branch_lvl = ifelse( branch != "", which(branch == branch_order), 0)) %>%
select(id_lang:silcode, branch, branch_lvl, group1:group14)
View(new_lang_heir_arr)
new_lang_heir_arr
# Create a column that would categorize a language's group
new_lang_heir_arr <- language_heirarchy_array %>%
mutate(branch = as.character("")) %>%
select(id_lang:silcode, branch, group1:group14) %>%
mutate(branch = ifelse(group2 %in% gp_formosan, "Formosan", branch)) %>%
mutate(branch = ifelse(group3 == "Philippines" & group3 %in% gp_philippine_toadd, "Philippine", branch)) %>%
mutate(branch = ifelse(group3 %in% gp_western_malayo_polynesian, "Western Malayo-Polynesian", branch)) %>%
mutate(branch = ifelse(group3 %in% gp3, group3, branch)) %>%
mutate(branch = ifelse(group4 %in% gp4, group4, branch)) %>%
mutate(branch = ifelse(group5 %in% gp5, group5, branch)) %>%
mutate(branch = ifelse(group6 %in% gp6, group6, branch)) %>%
mutate(branch = ifelse(group7 %in% gp7, group7, branch)) %>%
mutate(branch = ifelse(group8 %in% gp8, group8, branch)) %>%
mutate(branch = ifelse(group9 %in% gp9, group9, branch)) %>%
mutate(branch = ifelse(group10 %in% gp10, group10, branch)) %>%
# Relevel branch into factor
mutate(branch = fct_relevel(branch, branch_order)) %>%
mutate(branch_lvl = ifelse(branch %in% branch_order, which(branch == branch_order) %>% as.factor, "" %>% as.factor)) %>%
select(id_lang:silcode, branch, branch_lvl, group1:group14)
new_lang_heir_arr
branch_order
# Create a column that would categorize a language's group
new_lang_heir_arr <- language_heirarchy_array %>%
mutate(branch = as.character("")) %>%
select(id_lang:silcode, branch, group1:group14) %>%
mutate(branch = ifelse(group2 %in% gp_formosan, "Formosan", branch)) %>%
mutate(branch = ifelse(group3 == "Philippines" & group3 %in% gp_philippine_toadd, "Philippine", branch)) %>%
mutate(branch = ifelse(group3 %in% gp_western_malayo_polynesian, "Western Malayo-Polynesian", branch)) %>%
mutate(branch = ifelse(group3 %in% gp3, group3, branch)) %>%
mutate(branch = ifelse(group4 %in% gp4, group4, branch)) %>%
mutate(branch = ifelse(group5 %in% gp5, group5, branch)) %>%
mutate(branch = ifelse(group6 %in% gp6, group6, branch)) %>%
mutate(branch = ifelse(group7 %in% gp7, group7, branch)) %>%
mutate(branch = ifelse(group8 %in% gp8, group8, branch)) %>%
mutate(branch = ifelse(group9 %in% gp9, group9, branch)) %>%
mutate(branch = ifelse(group10 %in% gp10, group10, branch)) %>%
# Relevel branch into factor
# mutate(branch = fct_relevel(branch, branch_order)) %>%
mutate(branch_lvl = ifelse(branch %in% branch_order, which(branch == branch_order) %>% as.character, "" %>% as.factor)) %>%
select(id_lang:silcode, branch, branch_lvl, group1:group14)
new_lang_heir_arr
# Create a column that would categorize a language's group
new_lang_heir_arr <- language_heirarchy_array %>%
mutate(branch = as.character("")) %>%
select(id_lang:silcode, branch, group1:group14) %>%
mutate(branch = ifelse(group2 %in% gp_formosan, "Formosan", branch)) %>%
mutate(branch = ifelse(group3 == "Philippines" & group3 %in% gp_philippine_toadd, "Philippine", branch)) %>%
mutate(branch = ifelse(group3 %in% gp_western_malayo_polynesian, "Western Malayo-Polynesian", branch)) %>%
mutate(branch = ifelse(group3 %in% gp3, group3, branch)) %>%
mutate(branch = ifelse(group4 %in% gp4, group4, branch)) %>%
mutate(branch = ifelse(group5 %in% gp5, group5, branch)) %>%
mutate(branch = ifelse(group6 %in% gp6, group6, branch)) %>%
mutate(branch = ifelse(group7 %in% gp7, group7, branch)) %>%
mutate(branch = ifelse(group8 %in% gp8, group8, branch)) %>%
mutate(branch = ifelse(group9 %in% gp9, group9, branch)) %>%
mutate(branch = ifelse(group10 %in% gp10, group10, branch)) %>%
# Relevel branch into factor
# mutate(branch = fct_relevel(branch, branch_order)) %>%
mutate(branch_lvl = ifelse(branch %in% branch_order, which(branch == branch_order) %>% as.character, "" %>% as.character)) %>%
select(id_lang:silcode, branch, branch_lvl, group1:group14)
new_lang_heir_arr
# Create a column that would categorize a language's group
new_lang_heir_arr <- language_heirarchy_array %>%
mutate(branch = as.character("")) %>%
select(id_lang:silcode, branch, group1:group14) %>%
mutate(branch = ifelse(group2 %in% gp_formosan, "Formosan", branch)) %>%
mutate(branch = ifelse(group3 == "Philippines" & group3 %in% gp_philippine_toadd, "Philippine", branch)) %>%
mutate(branch = ifelse(group3 %in% gp_western_malayo_polynesian, "Western Malayo-Polynesian", branch)) %>%
mutate(branch = ifelse(group3 %in% gp3, group3, branch)) %>%
mutate(branch = ifelse(group4 %in% gp4, group4, branch)) %>%
mutate(branch = ifelse(group5 %in% gp5, group5, branch)) %>%
mutate(branch = ifelse(group6 %in% gp6, group6, branch)) %>%
mutate(branch = ifelse(group7 %in% gp7, group7, branch)) %>%
mutate(branch = ifelse(group8 %in% gp8, group8, branch)) %>%
mutate(branch = ifelse(group9 %in% gp9, group9, branch)) %>%
mutate(branch = ifelse(group10 %in% gp10, group10, branch)) %>%
# Relevel branch into factor
select(id_lang:silcode, branch, branch_lvl, group1:group14)
new_lang_heir_arr
# Create a column that would categorize a language's group
new_lang_heir_arr <- language_heirarchy_array %>%
mutate(branch = as.character("")) %>%
select(id_lang:silcode, branch, group1:group14) %>%
mutate(branch = ifelse(group2 %in% gp_formosan, "Formosan", branch)) %>%
mutate(branch = ifelse(group3 == "Philippines" & group3 %in% gp_philippine_toadd, "Philippine", branch)) %>%
mutate(branch = ifelse(group3 %in% gp_western_malayo_polynesian, "Western Malayo-Polynesian", branch)) %>%
mutate(branch = ifelse(group3 %in% gp3, group3, branch)) %>%
mutate(branch = ifelse(group4 %in% gp4, group4, branch)) %>%
mutate(branch = ifelse(group5 %in% gp5, group5, branch)) %>%
mutate(branch = ifelse(group6 %in% gp6, group6, branch)) %>%
mutate(branch = ifelse(group7 %in% gp7, group7, branch)) %>%
mutate(branch = ifelse(group8 %in% gp8, group8, branch)) %>%
mutate(branch = ifelse(group9 %in% gp9, group9, branch)) %>%
mutate(branch = ifelse(group10 %in% gp10, group10, branch))
new_lang_heir_arr
# Create a column that would categorize a language's group
new_lang_heir_arr <- language_heirarchy_array %>%
mutate(branch = as.character("")) %>%
select(id_lang:silcode, branch, group1:group14) %>%
mutate(branch = ifelse(group2 %in% gp_formosan, "Formosan", branch)) %>%
mutate(branch = ifelse(group3 == "Philippines" & group3 %in% gp_philippine_toadd, "Philippine", branch)) %>%
mutate(branch = ifelse(group3 %in% gp_western_malayo_polynesian, "Western Malayo-Polynesian", branch)) %>%
mutate(branch = ifelse(group3 %in% gp3, group3, branch)) %>%
mutate(branch = ifelse(group4 %in% gp4, group4, branch)) %>%
mutate(branch = ifelse(group5 %in% gp5, group5, branch)) %>%
mutate(branch = ifelse(group6 %in% gp6, group6, branch)) %>%
mutate(branch = ifelse(group7 %in% gp7, group7, branch)) %>%
mutate(branch = ifelse(group8 %in% gp8, group8, branch)) %>%
mutate(branch = ifelse(group9 %in% gp9, group9, branch)) %>%
mutate(branch = ifelse(group10 %in% gp10, group10, branch)) %>%
# Relevel branch into factor
mutate(branch = fct_relevel(branch, branch_order))
new_lang_heir_arr
branch_list <- new_lang_heir_arr$branch %>% unique
new_lang_heir_arr %>%
group_by(branch) %>%
summarize(n = n()) %>% as.data.frame
new_lang_heir_arr$branch %>% levels
new_lang_heir_arr$branch %>% levels[1]
levels(new_lang_heir_arr$branch)[1]
levels(new_lang_heir_arr$branch)["Formosan"]
new_lang_heir_arr$branch["Formosan"]
branch_order["Formosan"]
branch_order['Formosan']
branch_order[branc_order == "Formosan"]
branch_order[branch_order == "Formosan"]
branch
match(branch, branch_order)
match("Papuan Tip", branch_order)
# Create a column that would categorize a language's group
new_lang_heir_arr <- language_heirarchy_array %>%
mutate(branch = as.character("")) %>%
select(id_lang:silcode, branch, group1:group14) %>%
mutate(branch = ifelse(group2 %in% gp_formosan, "Formosan", branch)) %>%
mutate(branch = ifelse(group3 == "Philippines" & group3 %in% gp_philippine_toadd, "Philippine", branch)) %>%
mutate(branch = ifelse(group3 %in% gp_western_malayo_polynesian, "Western Malayo-Polynesian", branch)) %>%
mutate(branch = ifelse(group3 %in% gp3, group3, branch)) %>%
mutate(branch = ifelse(group4 %in% gp4, group4, branch)) %>%
mutate(branch = ifelse(group5 %in% gp5, group5, branch)) %>%
mutate(branch = ifelse(group6 %in% gp6, group6, branch)) %>%
mutate(branch = ifelse(group7 %in% gp7, group7, branch)) %>%
mutate(branch = ifelse(group8 %in% gp8, group8, branch)) %>%
mutate(branch = ifelse(group9 %in% gp9, group9, branch)) %>%
mutate(branch = ifelse(group10 %in% gp10, group10, branch)) %>%
# Relevel branch into factor
mutate(branch = fct_relevel(branch, branch_order)) %>%
mutate(branch_lvl = match(branch, branch_order))
new_lang_heir_arr
# Create a column that would categorize a language's group
new_lang_heir_arr <- language_heirarchy_array %>%
mutate(branch = as.character("")) %>%
select(id_lang:silcode, branch, group1:group14) %>%
mutate(branch = ifelse(group2 %in% gp_formosan, "Formosan", branch)) %>%
mutate(branch = ifelse(group3 == "Philippines" & group3 %in% gp_philippine_toadd, "Philippine", branch)) %>%
mutate(branch = ifelse(group3 %in% gp_western_malayo_polynesian, "Western Malayo-Polynesian", branch)) %>%
mutate(branch = ifelse(group3 %in% gp3, group3, branch)) %>%
mutate(branch = ifelse(group4 %in% gp4, group4, branch)) %>%
mutate(branch = ifelse(group5 %in% gp5, group5, branch)) %>%
mutate(branch = ifelse(group6 %in% gp6, group6, branch)) %>%
mutate(branch = ifelse(group7 %in% gp7, group7, branch)) %>%
mutate(branch = ifelse(group8 %in% gp8, group8, branch)) %>%
mutate(branch = ifelse(group9 %in% gp9, group9, branch)) %>%
mutate(branch = ifelse(group10 %in% gp10, group10, branch)) %>%
# Relevel branch into factor
mutate(branch = fct_relevel(branch, branch_order)) %>%
mutate(branch_lvl = match(branch, branch_order)) %>%
select(id_lang:silcode, branch, branch_lvl, group1:group14)
new_lang_heir_arr
# Create a column that would categorize a language's group
new_lang_heir_arr <- language_heirarchy_array %>%
mutate(branch = as.character("")) %>%
select(id_lang:silcode, branch, group1:group14) %>%
mutate(branch = ifelse(group2 %in% gp_formosan, "Formosan", branch)) %>%
mutate(branch = ifelse(group3 == "Philippines" & group3 %in% gp_philippine_toadd, "Philippine", branch)) %>%
mutate(branch = ifelse(group3 %in% gp_western_malayo_polynesian, "Western Malayo-Polynesian", branch)) %>%
mutate(branch = ifelse(group3 %in% gp3, group3, branch)) %>%
mutate(branch = ifelse(group4 %in% gp4, group4, branch)) %>%
mutate(branch = ifelse(group5 %in% gp5, group5, branch)) %>%
mutate(branch = ifelse(group6 %in% gp6, group6, branch)) %>%
mutate(branch = ifelse(group7 %in% gp7, group7, branch)) %>%
mutate(branch = ifelse(group8 %in% gp8, group8, branch)) %>%
mutate(branch = ifelse(group9 %in% gp9, group9, branch)) %>%
mutate(branch = ifelse(group10 %in% gp10, group10, branch)) %>%
# Relevel branch into factor
mutate(branch = fct_relevel(branch, branch_order)) %>%
mutate(branch_id = match(branch, branch_order)) %>%
select(id_lang:silcode, branch, branch_lvl, group1:group14)
new_lang_heir_arr
write_json(new_lang_heir_arr, "data/output/json/language_heirarchy_array.json", pretty=T)
# Create a column that would categorize a language's group
new_lang_heir_arr <- language_heirarchy_array %>%
mutate(branch = as.character("")) %>%
select(id_lang:silcode, branch, group1:group14) %>%
mutate(branch = ifelse(group2 %in% gp_formosan, "Formosan", branch)) %>%
mutate(branch = ifelse(group3 == "Philippines" & group3 %in% gp_philippine_toadd, "Philippine", branch)) %>%
mutate(branch = ifelse(group3 %in% gp_western_malayo_polynesian, "Western Malayo-Polynesian", branch)) %>%
mutate(branch = ifelse(group3 %in% gp3, group3, branch)) %>%
mutate(branch = ifelse(group4 %in% gp4, group4, branch)) %>%
mutate(branch = ifelse(group5 %in% gp5, group5, branch)) %>%
mutate(branch = ifelse(group6 %in% gp6, group6, branch)) %>%
mutate(branch = ifelse(group7 %in% gp7, group7, branch)) %>%
mutate(branch = ifelse(group8 %in% gp8, group8, branch)) %>%
mutate(branch = ifelse(group9 %in% gp9, group9, branch)) %>%
mutate(branch = ifelse(group10 %in% gp10, group10, branch)) %>%
# Relevel branch into factor
mutate(branch = fct_relevel(branch, branch_order)) %>%
mutate(branch_id = match(branch, branch_order)) %>%
select(id_lang:silcode, branch, branch_lvl, group1:group14)
# Create a column that would categorize a language's group
new_lang_heir_arr <- language_heirarchy_array %>%
mutate(branch = as.character("")) %>%
select(id_lang:silcode, branch, group1:group14) %>%
mutate(branch = ifelse(group2 %in% gp_formosan, "Formosan", branch)) %>%
mutate(branch = ifelse(group3 == "Philippines" & group3 %in% gp_philippine_toadd, "Philippine", branch)) %>%
mutate(branch = ifelse(group3 %in% gp_western_malayo_polynesian, "Western Malayo-Polynesian", branch)) %>%
mutate(branch = ifelse(group3 %in% gp3, group3, branch)) %>%
mutate(branch = ifelse(group4 %in% gp4, group4, branch)) %>%
mutate(branch = ifelse(group5 %in% gp5, group5, branch)) %>%
mutate(branch = ifelse(group6 %in% gp6, group6, branch)) %>%
mutate(branch = ifelse(group7 %in% gp7, group7, branch)) %>%
mutate(branch = ifelse(group8 %in% gp8, group8, branch)) %>%
mutate(branch = ifelse(group9 %in% gp9, group9, branch)) %>%
mutate(branch = ifelse(group10 %in% gp10, group10, branch)) %>%
# Relevel branch into factor
mutate(branch = fct_relevel(branch, branch_order)) %>%
mutate(branch_id = match(branch, branch_order)) %>%
select(id_lang:silcode, branch, branch_id, group1:group14)
branch_list <- new_lang_heir_arr$branch %>% unique
new_lang_heir_arr %>%
group_by(branch) %>%
summarize(n = n()) %>% as.data.frame
write_json(new_lang_heir_arr, "data/output/json/language_heirarchy_array.json", pretty=T)
olotnew_lang_heir_arr <- new_lang_heir_arr %>%
group_by(branch) %>%
summarize(n = n()) %>% as.data.frame
plot_new_lang_heir_arr <- new_lang_heir_arr %>%
group_by(branch) %>%
summarize(n = n()) %>% as.data.frame
ggplot(plot_new_lang_heir_arr) +
geom_bar(aes(branch, n))
?geom_bar
plot_new_lang_heir_arr
ggplot() +
geom_bar(plot_new_lang_heir_arr, aes(branch, n))
ggplot(plot_new_lang_heir_arr) +
geom_bar(aes(branch, n))
ggplot(plot_new_lang_heir_arr) +
geom_bar(aes(branch, weight=n))
ggplot(plot_new_lang_heir_arr) +
geom_bar(aes(branch, weight=n)) +
theme(axis.text.x = element_text(angle = 90))
gp3 <- c("Philippine")
gp4 <- c("Central Malayo-Polynesian")
# gp5 <- c("South Halmahera-West New Guinea")
gp5 <- ("")
gp6 <- c("Admiralty Islands", "Central-Eastern Oceanic")
gp7 <- c("Papuan Tip", "North New Guinea", "Southeast Solomonic", "Meso Melanesian")
gp8 <- c("North and Central Vanuatu", "Micronesian", "New Caledonian")
gp9 <- c("Northeast Vanuatu-Banks Islands")
gp10 <- c("Polynesian", "East Vanuatu", "Malekula Coastal")
new_heirarchy_group <- list(gp3, gp4, gp5, gp6, gp7, gp8, gp10)
# Create a column that would categorize a language's group
new_lang_heir_arr <- language_heirarchy_array %>%
mutate(branch = as.character("")) %>%
select(id_lang:silcode, branch, group1:group14) %>%
mutate(branch = ifelse(group2 %in% gp_formosan, "Formosan", branch)) %>%
mutate(branch = ifelse(group3 == "Philippines" & group3 %in% gp_philippine_toadd, "Philippine", branch)) %>%
mutate(branch = ifelse(group3 %in% gp_western_malayo_polynesian, "Western Malayo-Polynesian", branch)) %>%
mutate(branch = ifelse(group3 %in% gp3, group3, branch)) %>%
mutate(branch = ifelse(group4 %in% gp4, group4, branch)) %>%
mutate(branch = ifelse(group5 %in% gp5, group5, branch)) %>%
mutate(branch = ifelse(group6 %in% gp6, group6, branch)) %>%
mutate(branch = ifelse(group7 %in% gp7, group7, branch)) %>%
mutate(branch = ifelse(group8 %in% gp8, group8, branch)) %>%
mutate(branch = ifelse(group9 %in% gp9, group9, branch)) %>%
mutate(branch = ifelse(group10 %in% gp10, group10, branch)) %>%
# Relevel branch into factor
mutate(branch = fct_relevel(branch, branch_order)) %>%
mutate(branch_id = match(branch, branch_order)) %>%
select(id_lang:silcode, branch, branch_id, group1:group14)
branch_list <- new_lang_heir_arr$branch %>% unique
plot_new_lang_heir_arr <- new_lang_heir_arr %>%
group_by(branch) %>%
summarize(n = n()) %>% as.data.frame
write_json(new_lang_heir_arr, "data/output/json/language_heirarchy_array.json", pretty=T)
ggplot(plot_new_lang_heir_arr) +
geom_bar(aes(branch, weight=n)) +
theme(axis.text.x = element_text(angle = 90))
gp6 <- c("Admiralty Islands", "Central-Eastern Oceanic")
gp3 <- c("Philippine")
gp4 <- c("Central Malayo-Polynesian")
# gp5 <- c("South Halmahera-West New Guinea")
gp5 <- ("")
# gp6 <- c("Admiralty Islands", "Central-Eastern Oceanic")
gp6 <- ("")
gp7 <- c("Papuan Tip", "North New Guinea", "Southeast Solomonic", "Meso Melanesian")
gp8 <- c("North and Central Vanuatu", "Micronesian", "New Caledonian")
gp9 <- c("Northeast Vanuatu-Banks Islands")
gp10 <- c("Polynesian", "East Vanuatu", "Malekula Coastal")
new_heirarchy_group <- list(gp3, gp4, gp5, gp6, gp7, gp8, gp10)
# Create a column that would categorize a language's group
new_lang_heir_arr <- language_heirarchy_array %>%
mutate(branch = as.character("")) %>%
select(id_lang:silcode, branch, group1:group14) %>%
mutate(branch = ifelse(group2 %in% gp_formosan, "Formosan", branch)) %>%
mutate(branch = ifelse(group3 == "Philippines" & group3 %in% gp_philippine_toadd, "Philippine", branch)) %>%
mutate(branch = ifelse(group3 %in% gp_western_malayo_polynesian, "Western Malayo-Polynesian", branch)) %>%
mutate(branch = ifelse(group3 %in% gp3, group3, branch)) %>%
mutate(branch = ifelse(group4 %in% gp4, group4, branch)) %>%
mutate(branch = ifelse(group5 %in% gp5, group5, branch)) %>%
mutate(branch = ifelse(group6 %in% gp6, group6, branch)) %>%
mutate(branch = ifelse(group7 %in% gp7, group7, branch)) %>%
mutate(branch = ifelse(group8 %in% gp8, group8, branch)) %>%
mutate(branch = ifelse(group9 %in% gp9, group9, branch)) %>%
mutate(branch = ifelse(group10 %in% gp10, group10, branch)) %>%
# Relevel branch into factor
mutate(branch = fct_relevel(branch, branch_order)) %>%
mutate(branch_id = match(branch, branch_order)) %>%
select(id_lang:silcode, branch, branch_id, group1:group14)
branch_list <- new_lang_heir_arr$branch %>% unique
plot_new_lang_heir_arr <- new_lang_heir_arr %>%
group_by(branch) %>%
summarize(n = n()) %>% as.data.frame
write_json(new_lang_heir_arr, "data/output/json/language_heirarchy_array.json", pretty=T)
ggplot(plot_new_lang_heir_arr) +
geom_bar(aes(branch, weight=n)) +
theme(axis.text.x = element_text(angle = 90))
# gp8 <- c("North and Central Vanuatu", "Micronesian", "New Caledonian")
gp8 <- c("North and Central Vanuatu", "New Caledonian")
gp9 <- c("Northeast Vanuatu-Banks Islands")
gp10 <- c("Polynesian", "East Vanuatu", "Malekula Coastal")
new_heirarchy_group <- list(gp3, gp4, gp5, gp6, gp7, gp8, gp10)
# Create a column that would categorize a language's group
new_lang_heir_arr <- language_heirarchy_array %>%
mutate(branch = as.character("")) %>%
select(id_lang:silcode, branch, group1:group14) %>%
mutate(branch = ifelse(group2 %in% gp_formosan, "Formosan", branch)) %>%
mutate(branch = ifelse(group3 == "Philippines" & group3 %in% gp_philippine_toadd, "Philippine", branch)) %>%
mutate(branch = ifelse(group3 %in% gp_western_malayo_polynesian, "Western Malayo-Polynesian", branch)) %>%
mutate(branch = ifelse(group3 %in% gp3, group3, branch)) %>%
mutate(branch = ifelse(group4 %in% gp4, group4, branch)) %>%
mutate(branch = ifelse(group5 %in% gp5, group5, branch)) %>%
mutate(branch = ifelse(group6 %in% gp6, group6, branch)) %>%
mutate(branch = ifelse(group7 %in% gp7, group7, branch)) %>%
mutate(branch = ifelse(group8 %in% gp8, group8, branch)) %>%
mutate(branch = ifelse(group9 %in% gp9, group9, branch)) %>%
mutate(branch = ifelse(group10 %in% gp10, group10, branch)) %>%
# Relevel branch into factor
mutate(branch = fct_relevel(branch, branch_order)) %>%
mutate(branch_id = match(branch, branch_order)) %>%
select(id_lang:silcode, branch, branch_id, group1:group14)
branch_list <- new_lang_heir_arr$branch %>% unique
plot_new_lang_heir_arr <- new_lang_heir_arr %>%
group_by(branch) %>%
summarize(n = n()) %>% as.data.frame
write_json(new_lang_heir_arr, "data/output/json/language_heirarchy_array.json", pretty=T)
ggplot(plot_new_lang_heir_arr) +
geom_bar(aes(branch, weight=n)) +
theme(axis.text.x = element_text(angle = 90))
gp4 <- c("Central Malayo-Polynesian", "Eastern Malayo-Polynesian")
# gp5 <- c("South Halmahera-West New Guinea")
gp5 <- ("")
# gp6 <- c("Admiralty Islands", "Central-Eastern Oceanic")
gp6 <- ("")
gp7 <- c("Papuan Tip", "North New Guinea", "Southeast Solomonic", "Meso Melanesian")
# gp8 <- c("North and Central Vanuatu", "Micronesian", "New Caledonian")
gp8 <- c("North and Central Vanuatu", "New Caledonian")
gp9 <- c("Northeast Vanuatu-Banks Islands")
gp10 <- c("Polynesian", "East Vanuatu", "Malekula Coastal")
new_heirarchy_group <- list(gp3, gp4, gp5, gp6, gp7, gp8, gp10)
# Create a column that would categorize a language's group
new_lang_heir_arr <- language_heirarchy_array %>%
mutate(branch = as.character("")) %>%
select(id_lang:silcode, branch, group1:group14) %>%
mutate(branch = ifelse(group2 %in% gp_formosan, "Formosan", branch)) %>%
mutate(branch = ifelse(group3 == "Philippines" & group3 %in% gp_philippine_toadd, "Philippine", branch)) %>%
mutate(branch = ifelse(group3 %in% gp_western_malayo_polynesian, "Western Malayo-Polynesian", branch)) %>%
mutate(branch = ifelse(group3 %in% gp3, group3, branch)) %>%
mutate(branch = ifelse(group4 %in% gp4, group4, branch)) %>%
mutate(branch = ifelse(group5 %in% gp5, group5, branch)) %>%
mutate(branch = ifelse(group6 %in% gp6, group6, branch)) %>%
mutate(branch = ifelse(group7 %in% gp7, group7, branch)) %>%
mutate(branch = ifelse(group8 %in% gp8, group8, branch)) %>%
mutate(branch = ifelse(group9 %in% gp9, group9, branch)) %>%
mutate(branch = ifelse(group10 %in% gp10, group10, branch)) %>%
# Relevel branch into factor
mutate(branch = fct_relevel(branch, branch_order)) %>%
mutate(branch_id = match(branch, branch_order)) %>%
select(id_lang:silcode, branch, branch_id, group1:group14)
branch_list <- new_lang_heir_arr$branch %>% unique
plot_new_lang_heir_arr <- new_lang_heir_arr %>%
group_by(branch) %>%
summarize(n = n()) %>% as.data.frame
write_json(new_lang_heir_arr, "data/output/json/language_heirarchy_array.json", pretty=T)
ggplot(plot_new_lang_heir_arr) +
geom_bar(aes(branch, weight=n)) +
theme(axis.text.x = element_text(angle = 90))
branch_order <- c("Formosan", "Philippine", "Western Malayo-Polynesian",
"Central Malayo-Polynesian", "Eastern Malayo-Polynesian", "South Halmahera-West New Guinea",
"Papuan Tip", "North New Guinea", "Admiralty Islands", "Central-Eastern Oceanic",
"Southeast Solomonic", "Meso Melanesian", "Temotu", "New Caledonian",
"Micronesian", "North and Central Vanuatu","Northeast Vanuatu-Banks Islands",
"East Vanuatu", "Malekula Coastal", "Polynesian")
# 1. Formosan (no node, created) - all children in group 2
gp_formosan <- c("Atayalic", "East-Formosan", "Western Plains", "Tsouic",
"Bunun", "Northwest Formosan", "Paiwan", "Puyuma", "Rukai")
# 2. Philippine (group 3) - all children in group 4
# Child nodes: group 3
gp_philippine_toadd <- c("Bashiic")
# 3. Western Malayo-Polynesian (no node) - all children in group 3
gp_western_malayo_polynesian <- c("Celebic", "North Borneo", "Malayo-Chamic", "Greater Barito",
"Land Dayak", "Malayo-Sumbawan North and East", "Bali-Sasak-Sumbawa")
gp3 <- c("Philippine")
gp4 <- c("Central Malayo-Polynesian", "Eastern Malayo-Polynesian")
# gp5 <- c("South Halmahera-West New Guinea")
gp5 <- ("")
# gp6 <- c("Admiralty Islands", "Central-Eastern Oceanic")
gp6 <- ("")
gp7 <- c("Papuan Tip", "North New Guinea", "Southeast Solomonic", "Meso Melanesian")
# gp8 <- c("North and Central Vanuatu", "Micronesian", "New Caledonian")
gp8 <- c("North and Central Vanuatu", "New Caledonian")
gp9 <- c("Northeast Vanuatu-Banks Islands")
gp10 <- c("Polynesian", "East Vanuatu", "Malekula Coastal")
new_heirarchy_group <- list(gp3, gp4, gp5, gp6, gp7, gp8, gp10)
# Create a column that would categorize a language's group
new_lang_heir_arr <- language_heirarchy_array %>%
mutate(branch = as.character("")) %>%
select(id_lang:silcode, branch, group1:group14) %>%
mutate(branch = ifelse(group2 %in% gp_formosan, "Formosan", branch)) %>%
mutate(branch = ifelse(group3 == "Philippines" & group3 %in% gp_philippine_toadd, "Philippine", branch)) %>%
mutate(branch = ifelse(group3 %in% gp_western_malayo_polynesian, "Western Malayo-Polynesian", branch)) %>%
mutate(branch = ifelse(group3 %in% gp3, group3, branch)) %>%
mutate(branch = ifelse(group4 %in% gp4, group4, branch)) %>%
mutate(branch = ifelse(group5 %in% gp5, group5, branch)) %>%
mutate(branch = ifelse(group6 %in% gp6, group6, branch)) %>%
mutate(branch = ifelse(group7 %in% gp7, group7, branch)) %>%
mutate(branch = ifelse(group8 %in% gp8, group8, branch)) %>%
mutate(branch = ifelse(group9 %in% gp9, group9, branch)) %>%
mutate(branch = ifelse(group10 %in% gp10, group10, branch)) %>%
# Relevel branch into factor
mutate(branch = fct_relevel(branch, branch_order)) %>%
mutate(branch_id = match(branch, branch_order)) %>%
select(id_lang:silcode, branch, branch_id, group1:group14)
branch_list <- new_lang_heir_arr$branch %>% unique
plot_new_lang_heir_arr <- new_lang_heir_arr %>%
group_by(branch) %>%
summarize(n = n()) %>% as.data.frame
write_json(new_lang_heir_arr, "data/output/json/language_heirarchy_array.json", pretty=T)
ggplot(plot_new_lang_heir_arr) +
geom_bar(aes(branch, weight=n)) +
theme(axis.text.x = element_text(angle = 90))
